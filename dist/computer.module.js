var D=3100,v;(function(t){t[t.TOTAL_MEMORY_SIZE=3100]="TOTAL_MEMORY_SIZE",t[t.WORKING_MEMORY_START=0]="WORKING_MEMORY_START",t[t.WORKING_MEMORY_END=1e3]="WORKING_MEMORY_END",t[t.PROGRAM_MEMORY_START=1e3]="PROGRAM_MEMORY_START",t[t.PROGRAM_MEMORY_END=2e3]="PROGRAM_MEMORY_END",t[t.KEYCODE_0_ADDRESS=2e3]="KEYCODE_0_ADDRESS",t[t.KEYCODE_1_ADDRESS=2001]="KEYCODE_1_ADDRESS",t[t.KEYCODE_2_ADDRESS=2002]="KEYCODE_2_ADDRESS",t[t.MOUSE_X_ADDRESS=2010]="MOUSE_X_ADDRESS",t[t.MOUSE_Y_ADDRESS=2011]="MOUSE_Y_ADDRESS",t[t.MOUSE_PIXEL_ADDRESS=2012]="MOUSE_PIXEL_ADDRESS",t[t.MOUSE_BUTTON_ADDRESS=2013]="MOUSE_BUTTON_ADDRESS",t[t.RANDOM_NUMBER_ADDRESS=2050]="RANDOM_NUMBER_ADDRESS",t[t.CURRENT_TIME_ADDRESS=2051]="CURRENT_TIME_ADDRESS",t[t.VIDEO_MEMORY_START=2100]="VIDEO_MEMORY_START",t[t.VIDEO_MEMORY_END=3e3]="VIDEO_MEMORY_END",t[t.AUDIO_CH1_WAVE_TYPE_ADDRESS=3e3]="AUDIO_CH1_WAVE_TYPE_ADDRESS",t[t.AUDIO_CH1_FREQUENCY_ADDRESS=3001]="AUDIO_CH1_FREQUENCY_ADDRESS",t[t.AUDIO_CH1_VOLUME_ADDRESS=3002]="AUDIO_CH1_VOLUME_ADDRESS",t[t.AUDIO_CH2_WAVE_TYPE_ADDRESS=3003]="AUDIO_CH2_WAVE_TYPE_ADDRESS",t[t.AUDIO_CH2_FREQUENCY_ADDRESS=3004]="AUDIO_CH2_FREQUENCY_ADDRESS",t[t.AUDIO_CH2_VOLUME_ADDRESS=3005]="AUDIO_CH2_VOLUME_ADDRESS",t[t.AUDIO_CH3_WAVE_TYPE_ADDRESS=3006]="AUDIO_CH3_WAVE_TYPE_ADDRESS",t[t.AUDIO_CH3_FREQUENCY_ADDRESS=3007]="AUDIO_CH3_FREQUENCY_ADDRESS",t[t.AUDIO_CH3_VOLUME_ADDRESS=3008]="AUDIO_CH3_VOLUME_ADDRESS"})(v||(v={}));var i=v;var O=class{static set(e,r){if(isNaN(r))throw new Error(`tried to write to an invalid value at ${e}`);if(e<0||e>=D)throw new Error("tried to write to an invalid memory address");this.ram[e]=r}static get(e){if(e<0||e>=D)throw new Error("tried to read from an invalid memory address");return this.ram[e]}};O.ram=[];var n=O;var P=30,N=30,Y=20;function b(t){if(t!=null)return t;throw new Error("unexpected null")}var X={"0":[0,0,0],"1":[255,255,255],"2":[255,0,0],"3":[0,255,0],"4":[0,0,255],"5":[255,255,0],"6":[0,255,255],"7":[255,0,255],"8":[192,192,192],"9":[128,128,128],"10":[128,0,0],"11":[128,128,0],"12":[0,128,0],"13":[128,0,128],"14":[0,128,128],"15":[0,0,128]},S=class{static getColor(e,r){let o=X[e];if(!o)throw new Error(`Invalid color code ${e} at address ${r}`);return o}static init(e){S.canvasCtx=e,this.imageData=e.createImageData(S.SCREEN_WIDTH,S.SCREEN_HEIGHT)}static drawScreen(){let e=b(this.imageData),r=i.VIDEO_MEMORY_END-i.VIDEO_MEMORY_START,o=e.data;for(let d=0;d<r;d++){let a=n.ram[i.VIDEO_MEMORY_START+d],l=this.getColor(a||"0",i.VIDEO_MEMORY_START+d);o[d*4]=l[0],o[d*4+1]=l[1],o[d*4+2]=l[2],o[d*4+3]=255}b(this.canvasCtx).putImageData(e,0,0)}},g=S;g.SCREEN_WIDTH=P,g.SCREEN_HEIGHT=N,g.SCREEN_PIXEL_SCALE=Y;var f=g;var E=class{static init(e){if(!document.body)throw new Error("DOM not ready");document.body.onkeydown=s=>{E.keysPressed.add(s.key)},document.body.onkeyup=s=>{this.keysPressed.delete(s.key)},document.body.onmousedown=()=>{this.mouseDown=!0},document.body.onmouseup=()=>{this.mouseDown=!1};let r=e.getBoundingClientRect().top+window.scrollY,o=e.getBoundingClientRect().left+window.scrollX;e.onmousemove=s=>{this.mouseX=Math.floor((s.pageX-o)/f.SCREEN_PIXEL_SCALE),this.mouseY=Math.floor((s.pageY-r)/f.SCREEN_PIXEL_SCALE)}}static updateInputs(){let e=Array.from(E.keysPressed.values()).reverse();n.ram[i.KEYCODE_0_ADDRESS]=e[0]||0,n.ram[i.KEYCODE_1_ADDRESS]=e[1]||0,n.ram[i.KEYCODE_2_ADDRESS]=e[2]||0,n.ram[i.MOUSE_BUTTON_ADDRESS]=E.mouseDown?1:0,n.ram[i.MOUSE_X_ADDRESS]=E.mouseX,n.ram[i.MOUSE_Y_ADDRESS]=E.mouseY,n.ram[i.MOUSE_PIXEL_ADDRESS]=i.VIDEO_MEMORY_START+Math.floor(this.mouseY)*f.SCREEN_WIDTH+Math.floor(this.mouseX),n.ram[i.RANDOM_NUMBER_ADDRESS]=Math.floor(Math.random()*255),n.ram[i.CURRENT_TIME_ADDRESS]=Date.now()}},_=E;_.keysPressed=new Set,_.mouseDown=!1,_.mouseX=0,_.mouseY=0;var T=_;var h=class{static init(e){this.instructions=e,Object.keys(e).forEach(r=>{let o=e[r].opcode;this.instructionsToOpcodes.set(r,o),this.opcodesToInstructions.set(o,r)})}static step(){T.updateInputs();let e=this.advanceProgramCounter(),r=this.opcodesToInstructions.get(e);if(!r)throw new Error(`Unknown opcode '${e}'`);let o=this.instructions[r].operands.map(()=>this.advanceProgramCounter());this.instructions[r].execute.apply(null,o)}static advanceProgramCounter(){if(this.programCounter<i.PROGRAM_MEMORY_START||this.programCounter>=i.PROGRAM_MEMORY_END)throw new Error(`program counter outside valid program memory region at ${this.programCounter}`);return n.get(this.programCounter++)}static reset(){this.programCounter=i.PROGRAM_MEMORY_START,this.halted=!1,this.running=!1}};h.programCounter=i.PROGRAM_MEMORY_START,h.running=!1,h.halted=!1,h.instructionsToOpcodes=new Map,h.opcodesToInstructions=new Map;var u=h;var W=window.AudioContext||window.webkitAudioContext,w={"0":"square","1":"sawtooth","2":"triangle","3":"sine"},C=class{static addAudioChannel(e,r,o){let s=this.audioCtx.createOscillator(),d=this.audioCtx.createGain();s.connect(d),d.connect(this.audioCtx.destination);let a={gain:0,oscillatorType:w["0"],frequency:440};return d.gain.value=a.gain,s.type=a.oscillatorType,s.frequency.value=a.frequency,s.start(),this.audioChannels.push({state:a,waveTypeAddr:e,freqAddr:r,volAddr:o,gainNode:d,oscillatorNode:s})}static updateAudio(){this.audioChannels.forEach(e=>{let r=(n.ram[e.freqAddr]||0)/1e3,o=u.running?(n.ram[e.volAddr]||0)/100*this.MAX_GAIN:0,s=w[n.ram[e.waveTypeAddr]]||w["0"],{state:d}=e;d.gain!==o&&(e.gainNode.gain.setValueAtTime(o,this.audioCtx.currentTime),d.gain=o),d.oscillatorType!==s&&(e.oscillatorNode.type=s,d.oscillatorType=s),d.frequency!==r&&(e.oscillatorNode.frequency.setValueAtTime(r,this.audioCtx.currentTime),d.frequency=r)})}static init(){this.addAudioChannel(i.AUDIO_CH1_WAVE_TYPE_ADDRESS,i.AUDIO_CH1_FREQUENCY_ADDRESS,i.AUDIO_CH1_VOLUME_ADDRESS),this.addAudioChannel(i.AUDIO_CH2_WAVE_TYPE_ADDRESS,i.AUDIO_CH2_FREQUENCY_ADDRESS,i.AUDIO_CH2_VOLUME_ADDRESS),this.addAudioChannel(i.AUDIO_CH3_WAVE_TYPE_ADDRESS,i.AUDIO_CH3_FREQUENCY_ADDRESS,i.AUDIO_CH3_VOLUME_ADDRESS)}};C.MAX_GAIN=.15,C.audioChannels=[],C.audioCtx=new W;var x=C;var y=class{static initInstructionsLabelOperands(){Object.keys(this.instructions).forEach(e=>{let r=this.instructions[e].operands.findIndex(o=>o[1]==="label");r>-1&&this.instructionsLabelOperands.set(e,r)})}static parseProgramText(e){let r=[],o=e.split(`
`),s="",d=0;try{for(d=0;d<o.length;d++){s=o[d];let a={name:"",operands:[]},l=s.replace(/;.*$/,"").split(" ");for(let m of l)if(!(m==null||m==""))if(a.name){if(a.name==="define"&&a.operands.length===0||this.instructionsLabelOperands.get(a.name)===a.operands.length){a.operands.push(m);continue}let c=parseInt(m,10);Number.isNaN(c)?a.operands.push(m):a.operands.push(c)}else{if(m.endsWith(":")){a.name="label",a.operands.push(m.slice(0,m.length-1));break}a.name=m}if(a.name&&a.name!=="label"&&a.name!=="data"&&a.name!=="define"){let m=this.instructions[a.name].operands;if(a.operands.length!==m.length){let c=new Error(`Wrong number of operands for instruction ${a.name}
  got ${a.operands.length}, expected ${m.length}
  at line ${d+1}: '${s}'`);throw c.isException=!0,c}}a.name&&r.push(a)}}catch(a){throw a.isException?a:new Error(`Syntax error on program line ${d+1}: '${s}'`)}return r.push({name:"halt",operands:[]}),r}static assembleAndLoadProgram(e){let r={},o=i.PROGRAM_MEMORY_START;for(let a of e)if(a.name==="label"){let l=a.operands[0];r[l]=o}else a.name!=="define"&&(o+=1+a.operands.length);let s={},d=i.PROGRAM_MEMORY_START;for(let a of e){if(a.name==="label")continue;if(a.name==="define"){s[a.operands[0]]=a.operands[1];continue}if(a.name==="data"){for(let c=0;c<a.operands.length;c++)n.ram[d++]=a.operands[c];continue}let l=u.instructionsToOpcodes.get(a.name);if(!l)throw new Error(`No opcode found for instruction '${a.name}'`);n.ram[d++]=l;let m=a.operands.slice(0);if(this.instructionsLabelOperands.has(a.name)){let c=this.instructionsLabelOperands.get(a.name);if(typeof c!="number")throw new Error("expected number");let p=a.operands[c],A=r[p];if(!A)throw new Error(`unknown label '${p}'`);m[c]=A}for(let c=0;c<m.length;c++){let p=null;if(typeof m[c]=="string")if(m[c]in s)p=s[m[c]];else throw new Error(`'${m[c]}' not defined`);else p=m[c];n.ram[d++]=p}}}static init(e){y.instructions=e,this.initInstructionsLabelOperands()}},I=y;I.instructionsLabelOperands=new Map,I.instructions={};var U=I;var B={name:"data",opcode:9200,description:`operands given will be included in the program when it is
  compiled at the position that they appear in the code, so you can use a label to
  get the address of the data and access it`,operands:[],execute:()=>{}},F={name:"break",opcode:9998,description:"pause program execution, so it must be resumed via simulator UI",operands:[],execute:()=>{u.running=!1}},K={name:"halt",opcode:9999,description:"end program execution, requiring the simulator to be reset to start again",operands:[],execute:()=>{u.running=!1,u.halted=!0}},j={data:B,break:F,halt:K},L=j;var Q={name:"copy_to_from",opcode:9e3,description:"set value at address to the value at the given address",operands:[["destination","address"],["source","address"]],execute:(t,e)=>{let r=n.get(e);n.set(t,r)}},z={name:"copy_to_from_constant",opcode:9001,description:"set value at address to the given constant value",operands:[["destination","address"],["source","constant"]],execute:(t,e)=>{n.set(t,e)}},Z={name:"copy_to_from_ptr",opcode:9002,description:`set value at destination address to the value at the
  address pointed to by the value at 'source' address`,operands:[["destination","address"],["source","pointer"]],execute:(t,e)=>{let r=n.get(e),o=n.get(r);n.set(t,o)}},J={name:"copy_into_ptr_from",opcode:9003,description:`set value at the address pointed to by the value at
  'destination' address to the value at the source address`,operands:[["destination","pointer"],["source","address"]],execute:(t,e)=>{let r=n.get(t),o=n.get(e);n.set(r,o)}},ee={name:"copy_address_of_label",opcode:9004,description:`set value at destination address to the address of the label
  given`,operands:[["destination","address"],["source","label"]],execute:(t,e)=>{n.set(t,e)}},te={copy_to_from:Q,copy_to_from_constant:z,copy_to_from_ptr:Z,copy_into_ptr_from:J,copy_address_of_label:ee},H=te;var re={name:"add",opcode:9010,description:`add the value at the 'a' address with the value at the 'b'
  address and store the result at the 'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e),d=o+s;n.set(r,d)}},ne={name:"add_constant",opcode:9011,description:`add the value at the 'a' address with the constant value 'b' and store
  the result at the 'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let s=n.get(t)+e;n.set(r,s)}},oe={name:"subtract",opcode:9020,description:`from the value at the 'a' address, subtract the value at the
  'b' address and store the result at the 'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e),d=o-s;n.set(r,d)}},se={name:"subtract_constant",opcode:9021,description:`from the value at the 'a' address, subtract the constant value 'b' and
  store the result at the 'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let s=n.get(t)-e;n.set(r,s)}},ae={name:"multiply",opcode:9030,description:`multiply the value at the 'a' address and the value at the 'b'
  address and store the result at the 'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e),d=o*s;n.set(r,d)}},de={name:"multiply_constant",opcode:9031,description:`multiply the value at the 'a' address and the constant value 'b' and
  store the result at the 'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let s=n.get(t)*e;n.set(r,s)}},ie={name:"divide",opcode:9040,description:`integer divide the value at the 'a' address by the value at
  the 'b' address and store the result at the 'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e);if(s===0)throw new Error("tried to divide by zero");let d=Math.floor(o/s);n.set(r,d)}},ce={name:"divide_constant",opcode:9041,description:`integer divide the value at the 'a' address by the constant value 'b'
  and store the result at the 'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t);if(e===0)throw new Error("tried to divide by zero");let s=Math.floor(o/e);n.set(r,s)}},ue={name:"modulo",opcode:9050,description:`get the value at the 'a' address modulo the value at the 'b'
  address and store the result at the 'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e);if(s===0)throw new Error("tried to modulo by zero");let d=o%s;n.set(r,d)}},me={name:"modulo_constant",opcode:9051,description:`get the value at the 'a' address modulo the constant value 'b' and
  store the result at the 'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let s=n.get(t)%e;if(e===0)throw new Error("tried to modulo by zero");n.set(r,s)}},le={add:re,add_constant:ne,subtract:oe,subtract_constant:se,multiply:ae,multiply_constant:de,divide:ie,divide_constant:ce,modulo:ue,modulo_constant:me},$=le;var pe={name:"compare",opcode:9090,description:`compare the value at the 'a' address and the value at the 'b'
  address and store the result (-1 for a < b, 0 for a == b, 1 for a > b) at the
  'result' address`,operands:[["a","address"],["b","address"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e),d=0;o<s?d=-1:o>s&&(d=1),n.set(r,d)}},he={name:"compare_constant",opcode:9091,description:`compare the value at the 'a' address and the constant value
  'b' and store the result (-1 for a < b, 0 for a == b, 1 for a > b) at the
  'result' address`,operands:[["a","address"],["b","constant"],["result","address"]],execute:(t,e,r)=>{let o=n.get(t),s=0;o<e?s=-1:o>e&&(s=1),n.set(r,s)}},fe={compare:pe,compare_constant:he},V=fe;var _e={name:"jump_to",opcode:9100,description:`set the program counter to the address of the label specified,
  so the program continues from there`,operands:[["destination","label"]],execute:t=>{u.programCounter=t}},Ee={name:"branch_if_equal",opcode:9101,description:`if the value at address 'a' is equal to the value at address
  'b', set the program counter to the address of the label specified, so the
  program continues from there`,operands:[["a","address"],["b","address"],["destination","label"]],execute(t,e,r){let o=n.get(t),s=n.get(e);o===s&&(u.programCounter=r)}},be={name:"branch_if_not_equal",opcode:9103,description:`if the value at address 'a' is not equal to the value at
  address 'b', set the program counter to the address of the label specified, so
  the program continues from there`,operands:[["a","address"],["b","address"],["destination","label"]],execute:(t,e,r)=>{let o=n.get(t),s=n.get(e);o!==s&&(u.programCounter=r)}},ge={name:"branch_if_equal_constant",opcode:9102,description:`if the value at address 'a' is equal to the constant value 'b', set the
  program counter to the address of the label specified, so the program continues
  from there`,operands:[["a","address"],["b","constant"],["destination","label"]],execute:(t,e,r)=>{n.get(t)===e&&(u.programCounter=r)}},Ce={name:"branch_if_not_equal_constant",opcode:9104,description:`if the value at address 'a' is not equal to the constant value 'b', set
  the program counter to the address of the label specified, so the program
  continues from there`,operands:[["a","address"],["b","constant"],["destination","label"]],execute:(t,e,r)=>{n.get(t)!==e&&(u.programCounter=r)}},Re={jump_to:_e,branch_if_equal:Ee,branch_if_equal_constant:ge,branch_if_not_equal:be,branch_if_not_equal_constant:Ce},q=Re;var De={...H,...$,...V,...q,...L},M=De;var R={$(t){let e=document.querySelector(t);if(e==null)throw new Error(`couldn't find selector '${t}'`);return e},$Input(t){let e=R.$(t);if(e instanceof HTMLInputElement)return e;throw new Error("expected HTMLInputElement")},$TextArea(t){let e=R.$(t);if(e instanceof HTMLTextAreaElement)return e;throw new Error("expected HTMLTextAreaElement")},$Button(t){let e=R.$(t);if(e instanceof HTMLButtonElement)return e;throw new Error("expected HTMLButtonElement")},$Canvas(t){let e=R.$(t);if(e instanceof HTMLCanvasElement)return e;throw new Error("expected HTMLCanvasElement")},$Select(t){let e=R.$(t);if(e instanceof HTMLSelectElement)return e;throw new Error("expected HTMLSelectElement")},virtualizedScrollView(t,e,r,o,s){Object.assign(t.style,{height:`${e}px`,overflow:"auto"});let d=document.createElement("div");Object.assign(d.style,{height:`${r*o}px`,overflow:"hidden"}),t.appendChild(d);let a=document.createElement("div");d.appendChild(a);let l=10,m=()=>requestAnimationFrame(()=>{let c=Math.max(0,Math.floor(t.scrollTop/r)-l),p=Math.min(o,Math.ceil((t.scrollTop+e)/r)+l),A=c*r;a.style.transform=`translateY(${A}px)`,a.innerHTML=s(c,p)});return t.onscroll=m,m}},k=R;function G(){let t=b(k.$Canvas("#canvas"));return u.init(M),f.init(t.getContext("2d")),T.init(t),x.init(),U.init(M),{resetMemory:()=>{for(let e=0;e<D;e++)n.ram[e]=0},getMemory:e=>n.ram[e],isRunning:()=>u.running,isHalted:()=>u.halted,getProgramCounter:()=>u.programCounter,resetCPU:()=>u.reset(),setRunning:e=>u.running=e,step:()=>u.step(),getOpcodesToInstructions:()=>u.opcodesToInstructions,getInstructions:()=>u.instructions,updateAudio:()=>x.updateAudio(),drawScreen:()=>f.drawScreen(),parseProgramText:e=>U.parseProgramText(e),assembleAndLoadProgram:e=>U.assembleAndLoadProgram(e)}}export{G as default};
